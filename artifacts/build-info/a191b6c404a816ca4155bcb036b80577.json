{
	"id": "a191b6c404a816ca4155bcb036b80577",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"testMappingPointers.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity >=0.8.2 <0.9.0;\r\n\r\n\r\ncontract Test {\r\n\r\n\r\n    // delegate data | perEpoch | perPoolPerEpoch\r\n    struct DelegateData {\r\n        uint128 totalVotesSpent;\r\n        uint128 totalRewards;\r\n        uint128 totalClaimed;\r\n    }\r\n\r\n    struct User {\r\n        uint128 totalVotesSpent;\r\n        uint128 totalRewards;\r\n        uint128 totalClaimed;\r\n        \r\n        // delegation\r\n        uint128 totalDelegated;     // for perPoolPerEpoch: states how much of user's votes were delegated to this pool; by delegate\r\n        address delegate;           //\r\n    }\r\n\r\n    mapping(uint256 epoch => mapping(bytes32 poolId => mapping(address delegate => DelegateData delegateAgent))) public delegateEpochPoolData;\r\n    mapping(uint256 epoch => mapping(bytes32 poolId => mapping(address user => DelegateData userPoolData))) public usersEpochPoolData;\r\n\r\n    constructor(){\r\n        usersEpochPoolData[0][0][address(0)].totalClaimed = 1;\r\n        delegateEpochPoolData[0][0][address(0)].totalClaimed = 2;\r\n    }\r\n\r\n    function test(bool isDelegate) public view returns(uint256) {\r\n        \r\n        mapping(uint256 epoch => mapping(bytes32 poolId => mapping(address user => DelegateData userPoolData))) storage accountEpochPoolData\r\n       = isDelegate ? (delegateEpochPoolData) : (usersEpochPoolData);\r\n\r\n        return accountEpochPoolData[0][0][address(0)].totalClaimed;\r\n    }\r\n\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"testMappingPointers.sol": {
				"Test": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "epoch",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "poolId",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "delegate",
									"type": "address"
								}
							],
							"name": "delegateEpochPoolData",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "totalVotesSpent",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "totalRewards",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "totalClaimed",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "isDelegate",
									"type": "bool"
								}
							],
							"name": "test",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "epoch",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "poolId",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "usersEpochPoolData",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "totalVotesSpent",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "totalRewards",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "totalClaimed",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"testMappingPointers.sol\":76:1424  contract Test {... */\n  mstore(0x40, 0x80)\n    /* \"testMappingPointers.sol\":897:1049  constructor(){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"testMappingPointers.sol\":973:974  1 */\n  0x01\n    /* \"testMappingPointers.sol\":921:939  usersEpochPoolData */\n  dup1\n    /* \"testMappingPointers.sol\":921:942  usersEpochPoolData[0] */\n  0x00\n    /* \"testMappingPointers.sol\":940:941  0 */\n  dup1\n    /* \"testMappingPointers.sol\":921:942  usersEpochPoolData[0] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"testMappingPointers.sol\":921:945  usersEpochPoolData[0][0] */\n  0x00\n    /* \"testMappingPointers.sol\":943:944  0 */\n  dup1\n    /* \"testMappingPointers.sol\":921:945  usersEpochPoolData[0][0] */\n  0x00\n  shl\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"testMappingPointers.sol\":921:957  usersEpochPoolData[0][0][address(0)] */\n  0x00\n    /* \"testMappingPointers.sol\":954:955  0 */\n  dup1\n    /* \"testMappingPointers.sol\":921:957  usersEpochPoolData[0][0][address(0)] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"testMappingPointers.sol\":921:970  usersEpochPoolData[0][0][address(0)].totalClaimed */\n  0x01\n  add\n  0x00\n    /* \"testMappingPointers.sol\":921:974  usersEpochPoolData[0][0][address(0)].totalClaimed = 1 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"testMappingPointers.sol\":1040:1041  2 */\n  0x02\n    /* \"testMappingPointers.sol\":985:1006  delegateEpochPoolData */\n  0x00\n    /* \"testMappingPointers.sol\":985:1009  delegateEpochPoolData[0] */\n  dup1\n    /* \"testMappingPointers.sol\":1007:1008  0 */\n  dup1\n    /* \"testMappingPointers.sol\":985:1009  delegateEpochPoolData[0] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"testMappingPointers.sol\":985:1012  delegateEpochPoolData[0][0] */\n  0x00\n    /* \"testMappingPointers.sol\":1010:1011  0 */\n  dup1\n    /* \"testMappingPointers.sol\":985:1012  delegateEpochPoolData[0][0] */\n  0x00\n  shl\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"testMappingPointers.sol\":985:1024  delegateEpochPoolData[0][0][address(0)] */\n  0x00\n    /* \"testMappingPointers.sol\":1021:1022  0 */\n  dup1\n    /* \"testMappingPointers.sol\":985:1024  delegateEpochPoolData[0][0][address(0)] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"testMappingPointers.sol\":985:1037  delegateEpochPoolData[0][0][address(0)].totalClaimed */\n  0x01\n  add\n  0x00\n    /* \"testMappingPointers.sol\":985:1041  delegateEpochPoolData[0][0][address(0)].totalClaimed = 2 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"testMappingPointers.sol\":76:1424  contract Test {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"testMappingPointers.sol\":76:1424  contract Test {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x198e54c4\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x36091dff\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x6353e8e6\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"testMappingPointers.sol\":615:752  mapping(uint256 epoch => mapping(bytes32 poolId => mapping(address delegate => DelegateData delegateAgent))) public delegateEpochPoolData */\n    tag_3:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_10\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"testMappingPointers.sol\":1057:1419  function test(bool isDelegate) public view returns(uint256) {... */\n    tag_4:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"testMappingPointers.sol\":759:888  mapping(uint256 epoch => mapping(bytes32 poolId => mapping(address user => DelegateData userPoolData))) public usersEpochPoolData */\n    tag_5:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_19:\n      tag_20\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_21\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"testMappingPointers.sol\":615:752  mapping(uint256 epoch => mapping(bytes32 poolId => mapping(address delegate => DelegateData delegateAgent))) public delegateEpochPoolData */\n    tag_9:\n      mstore(0x20, 0x00)\n      dup3\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap3\n      pop\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x00\n      add\n      0x10\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffff\n      and\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"testMappingPointers.sol\":1057:1419  function test(bool isDelegate) public view returns(uint256) {... */\n    tag_15:\n        /* \"testMappingPointers.sol\":1108:1115  uint256 */\n      0x00\n        /* \"testMappingPointers.sol\":1138:1270  mapping(uint256 epoch => mapping(bytes32 poolId => mapping(address user => DelegateData userPoolData))) storage accountEpochPoolData */\n      dup1\n        /* \"testMappingPointers.sol\":1281:1291  isDelegate */\n      dup3\n        /* \"testMappingPointers.sol\":1281:1340  isDelegate ? (delegateEpochPoolData) : (usersEpochPoolData) */\n      tag_23\n      jumpi\n        /* \"testMappingPointers.sol\":1321:1339  usersEpochPoolData */\n      0x01\n        /* \"testMappingPointers.sol\":1281:1340  isDelegate ? (delegateEpochPoolData) : (usersEpochPoolData) */\n      jump(tag_24)\n    tag_23:\n        /* \"testMappingPointers.sol\":1295:1316  delegateEpochPoolData */\n      0x00\n        /* \"testMappingPointers.sol\":1281:1340  isDelegate ? (delegateEpochPoolData) : (usersEpochPoolData) */\n    tag_24:\n        /* \"testMappingPointers.sol\":1138:1340  mapping(uint256 epoch => mapping(bytes32 poolId => mapping(address user => DelegateData userPoolData))) storage accountEpochPoolData... */\n      swap1\n      pop\n        /* \"testMappingPointers.sol\":1360:1380  accountEpochPoolData */\n      dup1\n        /* \"testMappingPointers.sol\":1360:1383  accountEpochPoolData[0] */\n      0x00\n        /* \"testMappingPointers.sol\":1381:1382  0 */\n      dup1\n        /* \"testMappingPointers.sol\":1360:1383  accountEpochPoolData[0] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"testMappingPointers.sol\":1360:1386  accountEpochPoolData[0][0] */\n      0x00\n        /* \"testMappingPointers.sol\":1384:1385  0 */\n      dup1\n        /* \"testMappingPointers.sol\":1360:1386  accountEpochPoolData[0][0] */\n      0x00\n      shl\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"testMappingPointers.sol\":1360:1398  accountEpochPoolData[0][0][address(0)] */\n      0x00\n        /* \"testMappingPointers.sol\":1395:1396  0 */\n      dup1\n        /* \"testMappingPointers.sol\":1360:1398  accountEpochPoolData[0][0][address(0)] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"testMappingPointers.sol\":1360:1411  accountEpochPoolData[0][0][address(0)].totalClaimed */\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"testMappingPointers.sol\":1353:1411  return accountEpochPoolData[0][0][address(0)].totalClaimed */\n      0xffffffffffffffffffffffffffffffff\n      and\n      swap2\n      pop\n      pop\n        /* \"testMappingPointers.sol\":1057:1419  function test(bool isDelegate) public view returns(uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"testMappingPointers.sol\":759:888  mapping(uint256 epoch => mapping(bytes32 poolId => mapping(address user => DelegateData userPoolData))) public usersEpochPoolData */\n    tag_20:\n      mstore(0x20, 0x01)\n      dup3\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap3\n      pop\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x00\n      add\n      0x10\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffff\n      and\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_26:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_28:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_29:\n        /* \"#utility.yul\":490:514   */\n      tag_50\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_28\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_51\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_51:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_30:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_53\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_29\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:767   */\n    tag_31:\n        /* \"#utility.yul\":727:734   */\n      0x00\n        /* \"#utility.yul\":756:761   */\n      dup2\n        /* \"#utility.yul\":745:761   */\n      swap1\n      pop\n        /* \"#utility.yul\":690:767   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":773:895   */\n    tag_32:\n        /* \"#utility.yul\":846:870   */\n      tag_56\n        /* \"#utility.yul\":864:869   */\n      dup2\n        /* \"#utility.yul\":846:870   */\n      tag_31\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":839:844   */\n      dup2\n        /* \"#utility.yul\":836:871   */\n      eq\n        /* \"#utility.yul\":826:889   */\n      tag_57\n      jumpi\n        /* \"#utility.yul\":885:886   */\n      0x00\n        /* \"#utility.yul\":882:883   */\n      dup1\n        /* \"#utility.yul\":875:887   */\n      revert\n        /* \"#utility.yul\":826:889   */\n    tag_57:\n        /* \"#utility.yul\":773:895   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":901:1040   */\n    tag_33:\n        /* \"#utility.yul\":947:952   */\n      0x00\n        /* \"#utility.yul\":985:991   */\n      dup2\n        /* \"#utility.yul\":972:992   */\n      calldataload\n        /* \"#utility.yul\":963:992   */\n      swap1\n      pop\n        /* \"#utility.yul\":1001:1034   */\n      tag_59\n        /* \"#utility.yul\":1028:1033   */\n      dup2\n        /* \"#utility.yul\":1001:1034   */\n      tag_32\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":901:1040   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1046:1172   */\n    tag_34:\n        /* \"#utility.yul\":1083:1090   */\n      0x00\n        /* \"#utility.yul\":1123:1165   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1116:1121   */\n      dup3\n        /* \"#utility.yul\":1112:1166   */\n      and\n        /* \"#utility.yul\":1101:1166   */\n      swap1\n      pop\n        /* \"#utility.yul\":1046:1172   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1178:1274   */\n    tag_35:\n        /* \"#utility.yul\":1215:1222   */\n      0x00\n        /* \"#utility.yul\":1244:1268   */\n      tag_62\n        /* \"#utility.yul\":1262:1267   */\n      dup3\n        /* \"#utility.yul\":1244:1268   */\n      tag_34\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":1233:1268   */\n      swap1\n      pop\n        /* \"#utility.yul\":1178:1274   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1280:1402   */\n    tag_36:\n        /* \"#utility.yul\":1353:1377   */\n      tag_64\n        /* \"#utility.yul\":1371:1376   */\n      dup2\n        /* \"#utility.yul\":1353:1377   */\n      tag_35\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":1346:1351   */\n      dup2\n        /* \"#utility.yul\":1343:1378   */\n      eq\n        /* \"#utility.yul\":1333:1396   */\n      tag_65\n      jumpi\n        /* \"#utility.yul\":1392:1393   */\n      0x00\n        /* \"#utility.yul\":1389:1390   */\n      dup1\n        /* \"#utility.yul\":1382:1394   */\n      revert\n        /* \"#utility.yul\":1333:1396   */\n    tag_65:\n        /* \"#utility.yul\":1280:1402   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1408:1547   */\n    tag_37:\n        /* \"#utility.yul\":1454:1459   */\n      0x00\n        /* \"#utility.yul\":1492:1498   */\n      dup2\n        /* \"#utility.yul\":1479:1499   */\n      calldataload\n        /* \"#utility.yul\":1470:1499   */\n      swap1\n      pop\n        /* \"#utility.yul\":1508:1541   */\n      tag_67\n        /* \"#utility.yul\":1535:1540   */\n      dup2\n        /* \"#utility.yul\":1508:1541   */\n      tag_36\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":1408:1547   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1553:2172   */\n    tag_8:\n        /* \"#utility.yul\":1630:1636   */\n      0x00\n        /* \"#utility.yul\":1638:1644   */\n      dup1\n        /* \"#utility.yul\":1646:1652   */\n      0x00\n        /* \"#utility.yul\":1695:1697   */\n      0x60\n        /* \"#utility.yul\":1683:1692   */\n      dup5\n        /* \"#utility.yul\":1674:1681   */\n      dup7\n        /* \"#utility.yul\":1670:1693   */\n      sub\n        /* \"#utility.yul\":1666:1698   */\n      slt\n        /* \"#utility.yul\":1663:1782   */\n      iszero\n      tag_69\n      jumpi\n        /* \"#utility.yul\":1701:1780   */\n      tag_70\n      tag_26\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":1663:1782   */\n    tag_69:\n        /* \"#utility.yul\":1821:1822   */\n      0x00\n        /* \"#utility.yul\":1846:1899   */\n      tag_71\n        /* \"#utility.yul\":1891:1898   */\n      dup7\n        /* \"#utility.yul\":1882:1888   */\n      dup3\n        /* \"#utility.yul\":1871:1880   */\n      dup8\n        /* \"#utility.yul\":1867:1889   */\n      add\n        /* \"#utility.yul\":1846:1899   */\n      tag_30\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":1836:1899   */\n      swap4\n      pop\n        /* \"#utility.yul\":1792:1909   */\n      pop\n        /* \"#utility.yul\":1948:1950   */\n      0x20\n        /* \"#utility.yul\":1974:2027   */\n      tag_72\n        /* \"#utility.yul\":2019:2026   */\n      dup7\n        /* \"#utility.yul\":2010:2016   */\n      dup3\n        /* \"#utility.yul\":1999:2008   */\n      dup8\n        /* \"#utility.yul\":1995:2017   */\n      add\n        /* \"#utility.yul\":1974:2027   */\n      tag_33\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":1964:2027   */\n      swap3\n      pop\n        /* \"#utility.yul\":1919:2037   */\n      pop\n        /* \"#utility.yul\":2076:2078   */\n      0x40\n        /* \"#utility.yul\":2102:2155   */\n      tag_73\n        /* \"#utility.yul\":2147:2154   */\n      dup7\n        /* \"#utility.yul\":2138:2144   */\n      dup3\n        /* \"#utility.yul\":2127:2136   */\n      dup8\n        /* \"#utility.yul\":2123:2145   */\n      add\n        /* \"#utility.yul\":2102:2155   */\n      tag_37\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":2092:2155   */\n      swap2\n      pop\n        /* \"#utility.yul\":2047:2165   */\n      pop\n        /* \"#utility.yul\":1553:2172   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2178:2296   */\n    tag_38:\n        /* \"#utility.yul\":2215:2222   */\n      0x00\n        /* \"#utility.yul\":2255:2289   */\n      0xffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2248:2253   */\n      dup3\n        /* \"#utility.yul\":2244:2290   */\n      and\n        /* \"#utility.yul\":2233:2290   */\n      swap1\n      pop\n        /* \"#utility.yul\":2178:2296   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2302:2420   */\n    tag_39:\n        /* \"#utility.yul\":2389:2413   */\n      tag_76\n        /* \"#utility.yul\":2407:2412   */\n      dup2\n        /* \"#utility.yul\":2389:2413   */\n      tag_38\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":2384:2387   */\n      dup3\n        /* \"#utility.yul\":2377:2414   */\n      mstore\n        /* \"#utility.yul\":2302:2420   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2426:2868   */\n    tag_11:\n        /* \"#utility.yul\":2575:2579   */\n      0x00\n        /* \"#utility.yul\":2613:2615   */\n      0x60\n        /* \"#utility.yul\":2602:2611   */\n      dup3\n        /* \"#utility.yul\":2598:2616   */\n      add\n        /* \"#utility.yul\":2590:2616   */\n      swap1\n      pop\n        /* \"#utility.yul\":2626:2697   */\n      tag_78\n        /* \"#utility.yul\":2694:2695   */\n      0x00\n        /* \"#utility.yul\":2683:2692   */\n      dup4\n        /* \"#utility.yul\":2679:2696   */\n      add\n        /* \"#utility.yul\":2670:2676   */\n      dup7\n        /* \"#utility.yul\":2626:2697   */\n      tag_39\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":2707:2779   */\n      tag_79\n        /* \"#utility.yul\":2775:2777   */\n      0x20\n        /* \"#utility.yul\":2764:2773   */\n      dup4\n        /* \"#utility.yul\":2760:2778   */\n      add\n        /* \"#utility.yul\":2751:2757   */\n      dup6\n        /* \"#utility.yul\":2707:2779   */\n      tag_39\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":2789:2861   */\n      tag_80\n        /* \"#utility.yul\":2857:2859   */\n      0x40\n        /* \"#utility.yul\":2846:2855   */\n      dup4\n        /* \"#utility.yul\":2842:2860   */\n      add\n        /* \"#utility.yul\":2833:2839   */\n      dup5\n        /* \"#utility.yul\":2789:2861   */\n      tag_39\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":2426:2868   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2874:2964   */\n    tag_40:\n        /* \"#utility.yul\":2908:2915   */\n      0x00\n        /* \"#utility.yul\":2951:2956   */\n      dup2\n        /* \"#utility.yul\":2944:2957   */\n      iszero\n        /* \"#utility.yul\":2937:2958   */\n      iszero\n        /* \"#utility.yul\":2926:2958   */\n      swap1\n      pop\n        /* \"#utility.yul\":2874:2964   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2970:3086   */\n    tag_41:\n        /* \"#utility.yul\":3040:3061   */\n      tag_83\n        /* \"#utility.yul\":3055:3060   */\n      dup2\n        /* \"#utility.yul\":3040:3061   */\n      tag_40\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":3033:3038   */\n      dup2\n        /* \"#utility.yul\":3030:3062   */\n      eq\n        /* \"#utility.yul\":3020:3080   */\n      tag_84\n      jumpi\n        /* \"#utility.yul\":3076:3077   */\n      0x00\n        /* \"#utility.yul\":3073:3074   */\n      dup1\n        /* \"#utility.yul\":3066:3078   */\n      revert\n        /* \"#utility.yul\":3020:3080   */\n    tag_84:\n        /* \"#utility.yul\":2970:3086   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3092:3225   */\n    tag_42:\n        /* \"#utility.yul\":3135:3140   */\n      0x00\n        /* \"#utility.yul\":3173:3179   */\n      dup2\n        /* \"#utility.yul\":3160:3180   */\n      calldataload\n        /* \"#utility.yul\":3151:3180   */\n      swap1\n      pop\n        /* \"#utility.yul\":3189:3219   */\n      tag_86\n        /* \"#utility.yul\":3213:3218   */\n      dup2\n        /* \"#utility.yul\":3189:3219   */\n      tag_41\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":3092:3225   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3231:3554   */\n    tag_14:\n        /* \"#utility.yul\":3287:3293   */\n      0x00\n        /* \"#utility.yul\":3336:3338   */\n      0x20\n        /* \"#utility.yul\":3324:3333   */\n      dup3\n        /* \"#utility.yul\":3315:3322   */\n      dup5\n        /* \"#utility.yul\":3311:3334   */\n      sub\n        /* \"#utility.yul\":3307:3339   */\n      slt\n        /* \"#utility.yul\":3304:3423   */\n      iszero\n      tag_88\n      jumpi\n        /* \"#utility.yul\":3342:3421   */\n      tag_89\n      tag_26\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":3304:3423   */\n    tag_88:\n        /* \"#utility.yul\":3462:3463   */\n      0x00\n        /* \"#utility.yul\":3487:3537   */\n      tag_90\n        /* \"#utility.yul\":3529:3536   */\n      dup5\n        /* \"#utility.yul\":3520:3526   */\n      dup3\n        /* \"#utility.yul\":3509:3518   */\n      dup6\n        /* \"#utility.yul\":3505:3527   */\n      add\n        /* \"#utility.yul\":3487:3537   */\n      tag_42\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":3477:3537   */\n      swap2\n      pop\n        /* \"#utility.yul\":3433:3547   */\n      pop\n        /* \"#utility.yul\":3231:3554   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3560:3678   */\n    tag_43:\n        /* \"#utility.yul\":3647:3671   */\n      tag_92\n        /* \"#utility.yul\":3665:3670   */\n      dup2\n        /* \"#utility.yul\":3647:3671   */\n      tag_28\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":3642:3645   */\n      dup3\n        /* \"#utility.yul\":3635:3672   */\n      mstore\n        /* \"#utility.yul\":3560:3678   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3684:3906   */\n    tag_17:\n        /* \"#utility.yul\":3777:3781   */\n      0x00\n        /* \"#utility.yul\":3815:3817   */\n      0x20\n        /* \"#utility.yul\":3804:3813   */\n      dup3\n        /* \"#utility.yul\":3800:3818   */\n      add\n        /* \"#utility.yul\":3792:3818   */\n      swap1\n      pop\n        /* \"#utility.yul\":3828:3899   */\n      tag_94\n        /* \"#utility.yul\":3896:3897   */\n      0x00\n        /* \"#utility.yul\":3885:3894   */\n      dup4\n        /* \"#utility.yul\":3881:3898   */\n      add\n        /* \"#utility.yul\":3872:3878   */\n      dup5\n        /* \"#utility.yul\":3828:3899   */\n      tag_43\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":3684:3906   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220382edec6aa932e6e9478110859da067bcb2dad2d8cbcc4b9377ffd2a9945802b64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_69": {
									"entryPoint": null,
									"id": 69,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506001805f8081526020019081526020015f205f805f1b81526020019081526020015f205f8073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001015f6101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555060025f808081526020019081526020015f205f805f1b81526020019081526020015f205f8073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001015f6101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055506104c8806101495f395ff3fe608060405234801561000f575f80fd5b506004361061003f575f3560e01c8063198e54c41461004357806336091dff146100755780636353e8e6146100a5575b5f80fd5b61005d6004803603810190610058919061035b565b6100d7565b60405161006c939291906103d5565b60405180910390f35b61008f600480360381019061008a919061043f565b610163565b60405161009c9190610479565b60405180910390f35b6100bf60048036038101906100ba919061035b565b61020a565b6040516100ce939291906103d5565b60405180910390f35b5f602052825f5260405f20602052815f5260405f20602052805f5260405f205f925092505050805f015f9054906101000a90046fffffffffffffffffffffffffffffffff1690805f0160109054906101000a90046fffffffffffffffffffffffffffffffff1690806001015f9054906101000a90046fffffffffffffffffffffffffffffffff16905083565b5f8082610171576001610173565b5f5b9050805f8081526020019081526020015f205f805f1b81526020019081526020015f205f8073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001015f9054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16915050919050565b6001602052825f5260405f20602052815f5260405f20602052805f5260405f205f925092505050805f015f9054906101000a90046fffffffffffffffffffffffffffffffff1690805f0160109054906101000a90046fffffffffffffffffffffffffffffffff1690806001015f9054906101000a90046fffffffffffffffffffffffffffffffff16905083565b5f80fd5b5f819050919050565b6102ad8161029b565b81146102b7575f80fd5b50565b5f813590506102c8816102a4565b92915050565b5f819050919050565b6102e0816102ce565b81146102ea575f80fd5b50565b5f813590506102fb816102d7565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61032a82610301565b9050919050565b61033a81610320565b8114610344575f80fd5b50565b5f8135905061035581610331565b92915050565b5f805f6060848603121561037257610371610297565b5b5f61037f868287016102ba565b9350506020610390868287016102ed565b92505060406103a186828701610347565b9150509250925092565b5f6fffffffffffffffffffffffffffffffff82169050919050565b6103cf816103ab565b82525050565b5f6060820190506103e85f8301866103c6565b6103f560208301856103c6565b61040260408301846103c6565b949350505050565b5f8115159050919050565b61041e8161040a565b8114610428575f80fd5b50565b5f8135905061043981610415565b92915050565b5f6020828403121561045457610453610297565b5b5f6104618482850161042b565b91505092915050565b6104738161029b565b82525050565b5f60208201905061048c5f83018461046a565b9291505056fea2646970667358221220382edec6aa932e6e9478110859da067bcb2dad2d8cbcc4b9377ffd2a9945802b64736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 DUP1 PUSH0 DUP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP1 PUSH0 SHL DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH0 DUP1 DUP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP1 PUSH0 SHL DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x4C8 DUP1 PUSH2 0x149 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x198E54C4 EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0x36091DFF EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0x6353E8E6 EQ PUSH2 0xA5 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x5D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x58 SWAP2 SWAP1 PUSH2 0x35B JUMP JUMPDEST PUSH2 0xD7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8A SWAP2 SWAP1 PUSH2 0x43F JUMP JUMPDEST PUSH2 0x163 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9C SWAP2 SWAP1 PUSH2 0x479 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBA SWAP2 SWAP1 PUSH2 0x35B JUMP JUMPDEST PUSH2 0x20A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH1 0x20 MSTORE DUP3 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP3 POP SWAP3 POP POP POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH0 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP4 JUMP JUMPDEST PUSH0 DUP1 DUP3 PUSH2 0x171 JUMPI PUSH1 0x1 PUSH2 0x173 JUMP JUMPDEST PUSH0 JUMPDEST SWAP1 POP DUP1 PUSH0 DUP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP1 PUSH0 SHL DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP3 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP3 POP SWAP3 POP POP POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH0 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP4 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2AD DUP2 PUSH2 0x29B JUMP JUMPDEST DUP2 EQ PUSH2 0x2B7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2C8 DUP2 PUSH2 0x2A4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2E0 DUP2 PUSH2 0x2CE JUMP JUMPDEST DUP2 EQ PUSH2 0x2EA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2FB DUP2 PUSH2 0x2D7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x32A DUP3 PUSH2 0x301 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x33A DUP2 PUSH2 0x320 JUMP JUMPDEST DUP2 EQ PUSH2 0x344 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x355 DUP2 PUSH2 0x331 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x372 JUMPI PUSH2 0x371 PUSH2 0x297 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x37F DUP7 DUP3 DUP8 ADD PUSH2 0x2BA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x390 DUP7 DUP3 DUP8 ADD PUSH2 0x2ED JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3A1 DUP7 DUP3 DUP8 ADD PUSH2 0x347 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3CF DUP2 PUSH2 0x3AB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3E8 PUSH0 DUP4 ADD DUP7 PUSH2 0x3C6 JUMP JUMPDEST PUSH2 0x3F5 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x3C6 JUMP JUMPDEST PUSH2 0x402 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3C6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x41E DUP2 PUSH2 0x40A JUMP JUMPDEST DUP2 EQ PUSH2 0x428 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x439 DUP2 PUSH2 0x415 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x454 JUMPI PUSH2 0x453 PUSH2 0x297 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x461 DUP5 DUP3 DUP6 ADD PUSH2 0x42B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x473 DUP2 PUSH2 0x29B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x48C PUSH0 DUP4 ADD DUP5 PUSH2 0x46A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE 0x2E 0xDE 0xC6 0xAA SWAP4 0x2E PUSH15 0x9478110859DA067BCB2DAD2D8CBCC4 0xB9 CALLDATACOPY PUSH32 0xFD2A9945802B64736F6C63430008180033000000000000000000000000000000 ",
							"sourceMap": "76:1348:0:-:0;;;897:152;;;;;;;;;;973:1;921:18;:21;940:1;921:21;;;;;;;;;;;:24;943:1;921:24;;;;;;;;;;;;;:36;954:1;921:36;;;;;;;;;;;;;;;:49;;;:53;;;;;;;;;;;;;;;;;;1040:1;985:21;:24;1007:1;985:24;;;;;;;;;;;:27;1010:1;985:27;;;;;;;;;;;;;:39;1021:1;985:39;;;;;;;;;;;;;;;:52;;;:56;;;;;;;;;;;;;;;;;;76:1348;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@delegateEpochPoolData_28": {
									"entryPoint": 215,
									"id": 28,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@test_105": {
									"entryPoint": 355,
									"id": 105,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@usersEpochPoolData_37": {
									"entryPoint": 522,
									"id": 37,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 839,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 1067,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 749,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 698,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool": {
									"entryPoint": 1087,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_bytes32t_address": {
									"entryPoint": 859,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_uint128_to_t_uint128_fromStack": {
									"entryPoint": 966,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1130,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint128_t_uint128_t_uint128__to_t_uint128_t_uint128_t_uint128__fromStack_reversed": {
									"entryPoint": 981,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1145,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 800,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1034,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 718,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint128": {
									"entryPoint": 939,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 769,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 667,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 663,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 817,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 1045,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 727,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 676,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3909:1",
										"nodeType": "YulBlock",
										"src": "0:3909:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "379:32:1",
													"nodeType": "YulBlock",
													"src": "379:32:1",
													"statements": [
														{
															"nativeSrc": "389:16:1",
															"nodeType": "YulAssignment",
															"src": "389:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:1",
																"nodeType": "YulIdentifier",
																"src": "400:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:1",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:1",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:77:1"
											},
											{
												"body": {
													"nativeSrc": "460:79:1",
													"nodeType": "YulBlock",
													"src": "460:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:1",
																"nodeType": "YulBlock",
																"src": "517:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:1",
																					"nodeType": "YulLiteral",
																					"src": "526:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:1",
																					"nodeType": "YulLiteral",
																					"src": "529:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:1"
																			},
																			"nativeSrc": "519:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:1"
																		},
																		"nativeSrc": "519:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:1"
																				},
																				"nativeSrc": "490:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:1"
																		},
																		"nativeSrc": "480:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:1"
																},
																"nativeSrc": "473:43:1",
																"nodeType": "YulFunctionCall",
																"src": "473:43:1"
															},
															"nativeSrc": "470:63:1",
															"nodeType": "YulIf",
															"src": "470:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:1",
														"nodeType": "YulTypedName",
														"src": "453:5:1",
														"type": ""
													}
												],
												"src": "417:122:1"
											},
											{
												"body": {
													"nativeSrc": "597:87:1",
													"nodeType": "YulBlock",
													"src": "597:87:1",
													"statements": [
														{
															"nativeSrc": "607:29:1",
															"nodeType": "YulAssignment",
															"src": "607:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:1"
																},
																"nativeSrc": "616:20:1",
																"nodeType": "YulFunctionCall",
																"src": "616:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "645:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:1"
																},
																"nativeSrc": "645:33:1",
																"nodeType": "YulFunctionCall",
																"src": "645:33:1"
															},
															"nativeSrc": "645:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "545:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:1",
														"nodeType": "YulTypedName",
														"src": "575:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:1",
														"nodeType": "YulTypedName",
														"src": "583:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:1",
														"nodeType": "YulTypedName",
														"src": "591:5:1",
														"type": ""
													}
												],
												"src": "545:139:1"
											},
											{
												"body": {
													"nativeSrc": "735:32:1",
													"nodeType": "YulBlock",
													"src": "735:32:1",
													"statements": [
														{
															"nativeSrc": "745:16:1",
															"nodeType": "YulAssignment",
															"src": "745:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "756:5:1",
																"nodeType": "YulIdentifier",
																"src": "756:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "745:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "745:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "690:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "717:5:1",
														"nodeType": "YulTypedName",
														"src": "717:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "727:7:1",
														"nodeType": "YulTypedName",
														"src": "727:7:1",
														"type": ""
													}
												],
												"src": "690:77:1"
											},
											{
												"body": {
													"nativeSrc": "816:79:1",
													"nodeType": "YulBlock",
													"src": "816:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "873:16:1",
																"nodeType": "YulBlock",
																"src": "873:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "882:1:1",
																					"nodeType": "YulLiteral",
																					"src": "882:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "885:1:1",
																					"nodeType": "YulLiteral",
																					"src": "885:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "875:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "875:6:1"
																			},
																			"nativeSrc": "875:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "875:12:1"
																		},
																		"nativeSrc": "875:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "875:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "839:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "839:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "864:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "864:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "846:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "846:17:1"
																				},
																				"nativeSrc": "846:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "846:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "836:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "836:2:1"
																		},
																		"nativeSrc": "836:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "836:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "829:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "829:6:1"
																},
																"nativeSrc": "829:43:1",
																"nodeType": "YulFunctionCall",
																"src": "829:43:1"
															},
															"nativeSrc": "826:63:1",
															"nodeType": "YulIf",
															"src": "826:63:1"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "773:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "809:5:1",
														"nodeType": "YulTypedName",
														"src": "809:5:1",
														"type": ""
													}
												],
												"src": "773:122:1"
											},
											{
												"body": {
													"nativeSrc": "953:87:1",
													"nodeType": "YulBlock",
													"src": "953:87:1",
													"statements": [
														{
															"nativeSrc": "963:29:1",
															"nodeType": "YulAssignment",
															"src": "963:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "985:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "985:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "972:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "972:12:1"
																},
																"nativeSrc": "972:20:1",
																"nodeType": "YulFunctionCall",
																"src": "972:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "963:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "963:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1028:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1028:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "1001:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "1001:26:1"
																},
																"nativeSrc": "1001:33:1",
																"nodeType": "YulFunctionCall",
																"src": "1001:33:1"
															},
															"nativeSrc": "1001:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "1001:33:1"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "901:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "931:6:1",
														"nodeType": "YulTypedName",
														"src": "931:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "939:3:1",
														"nodeType": "YulTypedName",
														"src": "939:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "947:5:1",
														"nodeType": "YulTypedName",
														"src": "947:5:1",
														"type": ""
													}
												],
												"src": "901:139:1"
											},
											{
												"body": {
													"nativeSrc": "1091:81:1",
													"nodeType": "YulBlock",
													"src": "1091:81:1",
													"statements": [
														{
															"nativeSrc": "1101:65:1",
															"nodeType": "YulAssignment",
															"src": "1101:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1116:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1116:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1123:42:1",
																		"nodeType": "YulLiteral",
																		"src": "1123:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1112:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1112:3:1"
																},
																"nativeSrc": "1112:54:1",
																"nodeType": "YulFunctionCall",
																"src": "1112:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1101:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1101:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1046:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1073:5:1",
														"nodeType": "YulTypedName",
														"src": "1073:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1083:7:1",
														"nodeType": "YulTypedName",
														"src": "1083:7:1",
														"type": ""
													}
												],
												"src": "1046:126:1"
											},
											{
												"body": {
													"nativeSrc": "1223:51:1",
													"nodeType": "YulBlock",
													"src": "1223:51:1",
													"statements": [
														{
															"nativeSrc": "1233:35:1",
															"nodeType": "YulAssignment",
															"src": "1233:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1262:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1262:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1244:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "1244:17:1"
																},
																"nativeSrc": "1244:24:1",
																"nodeType": "YulFunctionCall",
																"src": "1244:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1233:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1233:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1178:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1205:5:1",
														"nodeType": "YulTypedName",
														"src": "1205:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1215:7:1",
														"nodeType": "YulTypedName",
														"src": "1215:7:1",
														"type": ""
													}
												],
												"src": "1178:96:1"
											},
											{
												"body": {
													"nativeSrc": "1323:79:1",
													"nodeType": "YulBlock",
													"src": "1323:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1380:16:1",
																"nodeType": "YulBlock",
																"src": "1380:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1389:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1389:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1392:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1392:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1382:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1382:6:1"
																			},
																			"nativeSrc": "1382:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1382:12:1"
																		},
																		"nativeSrc": "1382:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1382:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1346:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1346:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1371:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "1371:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1353:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "1353:17:1"
																				},
																				"nativeSrc": "1353:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1353:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1343:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "1343:2:1"
																		},
																		"nativeSrc": "1343:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1343:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1336:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1336:6:1"
																},
																"nativeSrc": "1336:43:1",
																"nodeType": "YulFunctionCall",
																"src": "1336:43:1"
															},
															"nativeSrc": "1333:63:1",
															"nodeType": "YulIf",
															"src": "1333:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1280:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1316:5:1",
														"nodeType": "YulTypedName",
														"src": "1316:5:1",
														"type": ""
													}
												],
												"src": "1280:122:1"
											},
											{
												"body": {
													"nativeSrc": "1460:87:1",
													"nodeType": "YulBlock",
													"src": "1460:87:1",
													"statements": [
														{
															"nativeSrc": "1470:29:1",
															"nodeType": "YulAssignment",
															"src": "1470:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1492:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1492:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1479:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1479:12:1"
																},
																"nativeSrc": "1479:20:1",
																"nodeType": "YulFunctionCall",
																"src": "1479:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1470:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1470:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1535:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1535:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1508:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "1508:26:1"
																},
																"nativeSrc": "1508:33:1",
																"nodeType": "YulFunctionCall",
																"src": "1508:33:1"
															},
															"nativeSrc": "1508:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "1508:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1408:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1438:6:1",
														"nodeType": "YulTypedName",
														"src": "1438:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1446:3:1",
														"nodeType": "YulTypedName",
														"src": "1446:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1454:5:1",
														"nodeType": "YulTypedName",
														"src": "1454:5:1",
														"type": ""
													}
												],
												"src": "1408:139:1"
											},
											{
												"body": {
													"nativeSrc": "1653:519:1",
													"nodeType": "YulBlock",
													"src": "1653:519:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1699:83:1",
																"nodeType": "YulBlock",
																"src": "1699:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1701:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "1701:77:1"
																			},
																			"nativeSrc": "1701:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1701:79:1"
																		},
																		"nativeSrc": "1701:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1701:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1674:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1674:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1683:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1683:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1670:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1670:3:1"
																		},
																		"nativeSrc": "1670:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1670:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1695:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1695:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1666:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1666:3:1"
																},
																"nativeSrc": "1666:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1666:32:1"
															},
															"nativeSrc": "1663:119:1",
															"nodeType": "YulIf",
															"src": "1663:119:1"
														},
														{
															"nativeSrc": "1792:117:1",
															"nodeType": "YulBlock",
															"src": "1792:117:1",
															"statements": [
																{
																	"nativeSrc": "1807:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1807:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1821:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1821:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1811:6:1",
																			"nodeType": "YulTypedName",
																			"src": "1811:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1836:63:1",
																	"nodeType": "YulAssignment",
																	"src": "1836:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1871:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1871:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1882:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1882:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1867:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1867:3:1"
																				},
																				"nativeSrc": "1867:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1867:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1891:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1891:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1846:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "1846:20:1"
																		},
																		"nativeSrc": "1846:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1846:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1836:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1836:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1919:118:1",
															"nodeType": "YulBlock",
															"src": "1919:118:1",
															"statements": [
																{
																	"nativeSrc": "1934:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1934:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1948:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1948:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1938:6:1",
																			"nodeType": "YulTypedName",
																			"src": "1938:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1964:63:1",
																	"nodeType": "YulAssignment",
																	"src": "1964:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1999:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1999:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2010:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2010:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1995:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1995:3:1"
																				},
																				"nativeSrc": "1995:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1995:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2019:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2019:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "1974:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "1974:20:1"
																		},
																		"nativeSrc": "1974:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1974:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1964:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1964:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2047:118:1",
															"nodeType": "YulBlock",
															"src": "2047:118:1",
															"statements": [
																{
																	"nativeSrc": "2062:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2062:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2076:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2076:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2066:6:1",
																			"nodeType": "YulTypedName",
																			"src": "2066:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2092:63:1",
																	"nodeType": "YulAssignment",
																	"src": "2092:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2127:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "2127:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2138:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2138:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2123:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2123:3:1"
																				},
																				"nativeSrc": "2123:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2123:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2147:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2147:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2102:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "2102:20:1"
																		},
																		"nativeSrc": "2102:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2102:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "2092:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "2092:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_bytes32t_address",
												"nativeSrc": "1553:619:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1607:9:1",
														"nodeType": "YulTypedName",
														"src": "1607:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1618:7:1",
														"nodeType": "YulTypedName",
														"src": "1618:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1630:6:1",
														"nodeType": "YulTypedName",
														"src": "1630:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1638:6:1",
														"nodeType": "YulTypedName",
														"src": "1638:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1646:6:1",
														"nodeType": "YulTypedName",
														"src": "1646:6:1",
														"type": ""
													}
												],
												"src": "1553:619:1"
											},
											{
												"body": {
													"nativeSrc": "2223:73:1",
													"nodeType": "YulBlock",
													"src": "2223:73:1",
													"statements": [
														{
															"nativeSrc": "2233:57:1",
															"nodeType": "YulAssignment",
															"src": "2233:57:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2248:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2248:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2255:34:1",
																		"nodeType": "YulLiteral",
																		"src": "2255:34:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2244:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2244:3:1"
																},
																"nativeSrc": "2244:46:1",
																"nodeType": "YulFunctionCall",
																"src": "2244:46:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2233:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "2233:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint128",
												"nativeSrc": "2178:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2205:5:1",
														"nodeType": "YulTypedName",
														"src": "2205:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2215:7:1",
														"nodeType": "YulTypedName",
														"src": "2215:7:1",
														"type": ""
													}
												],
												"src": "2178:118:1"
											},
											{
												"body": {
													"nativeSrc": "2367:53:1",
													"nodeType": "YulBlock",
													"src": "2367:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2384:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2384:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2407:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2407:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint128",
																			"nativeSrc": "2389:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "2389:17:1"
																		},
																		"nativeSrc": "2389:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2389:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2377:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2377:6:1"
																},
																"nativeSrc": "2377:37:1",
																"nodeType": "YulFunctionCall",
																"src": "2377:37:1"
															},
															"nativeSrc": "2377:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "2377:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint128_to_t_uint128_fromStack",
												"nativeSrc": "2302:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2355:5:1",
														"nodeType": "YulTypedName",
														"src": "2355:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2362:3:1",
														"nodeType": "YulTypedName",
														"src": "2362:3:1",
														"type": ""
													}
												],
												"src": "2302:118:1"
											},
											{
												"body": {
													"nativeSrc": "2580:288:1",
													"nodeType": "YulBlock",
													"src": "2580:288:1",
													"statements": [
														{
															"nativeSrc": "2590:26:1",
															"nodeType": "YulAssignment",
															"src": "2590:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2602:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2602:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2613:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2613:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2598:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2598:3:1"
																},
																"nativeSrc": "2598:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2598:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2590:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2590:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2670:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2670:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2683:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2683:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2694:1:1",
																				"nodeType": "YulLiteral",
																				"src": "2694:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2679:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2679:3:1"
																		},
																		"nativeSrc": "2679:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2679:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint128_to_t_uint128_fromStack",
																	"nativeSrc": "2626:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "2626:43:1"
																},
																"nativeSrc": "2626:71:1",
																"nodeType": "YulFunctionCall",
																"src": "2626:71:1"
															},
															"nativeSrc": "2626:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "2626:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "2751:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2751:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2764:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2764:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2775:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2775:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2760:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2760:3:1"
																		},
																		"nativeSrc": "2760:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2760:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint128_to_t_uint128_fromStack",
																	"nativeSrc": "2707:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "2707:43:1"
																},
																"nativeSrc": "2707:72:1",
																"nodeType": "YulFunctionCall",
																"src": "2707:72:1"
															},
															"nativeSrc": "2707:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "2707:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "2833:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2833:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2846:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2846:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2857:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2857:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2842:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2842:3:1"
																		},
																		"nativeSrc": "2842:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2842:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint128_to_t_uint128_fromStack",
																	"nativeSrc": "2789:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "2789:43:1"
																},
																"nativeSrc": "2789:72:1",
																"nodeType": "YulFunctionCall",
																"src": "2789:72:1"
															},
															"nativeSrc": "2789:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "2789:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint128_t_uint128_t_uint128__to_t_uint128_t_uint128_t_uint128__fromStack_reversed",
												"nativeSrc": "2426:442:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2536:9:1",
														"nodeType": "YulTypedName",
														"src": "2536:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2548:6:1",
														"nodeType": "YulTypedName",
														"src": "2548:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2556:6:1",
														"nodeType": "YulTypedName",
														"src": "2556:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2564:6:1",
														"nodeType": "YulTypedName",
														"src": "2564:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2575:4:1",
														"nodeType": "YulTypedName",
														"src": "2575:4:1",
														"type": ""
													}
												],
												"src": "2426:442:1"
											},
											{
												"body": {
													"nativeSrc": "2916:48:1",
													"nodeType": "YulBlock",
													"src": "2916:48:1",
													"statements": [
														{
															"nativeSrc": "2926:32:1",
															"nodeType": "YulAssignment",
															"src": "2926:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2951:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2951:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2944:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "2944:6:1"
																		},
																		"nativeSrc": "2944:13:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2944:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2937:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2937:6:1"
																},
																"nativeSrc": "2937:21:1",
																"nodeType": "YulFunctionCall",
																"src": "2937:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2926:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "2926:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2874:90:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2898:5:1",
														"nodeType": "YulTypedName",
														"src": "2898:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2908:7:1",
														"nodeType": "YulTypedName",
														"src": "2908:7:1",
														"type": ""
													}
												],
												"src": "2874:90:1"
											},
											{
												"body": {
													"nativeSrc": "3010:76:1",
													"nodeType": "YulBlock",
													"src": "3010:76:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3064:16:1",
																"nodeType": "YulBlock",
																"src": "3064:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3073:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3073:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3076:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3076:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3066:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3066:6:1"
																			},
																			"nativeSrc": "3066:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3066:12:1"
																		},
																		"nativeSrc": "3066:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3066:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3033:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3033:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3055:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "3055:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "3040:14:1",
																					"nodeType": "YulIdentifier",
																					"src": "3040:14:1"
																				},
																				"nativeSrc": "3040:21:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3040:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3030:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "3030:2:1"
																		},
																		"nativeSrc": "3030:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3030:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3023:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3023:6:1"
																},
																"nativeSrc": "3023:40:1",
																"nodeType": "YulFunctionCall",
																"src": "3023:40:1"
															},
															"nativeSrc": "3020:60:1",
															"nodeType": "YulIf",
															"src": "3020:60:1"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "2970:116:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3003:5:1",
														"nodeType": "YulTypedName",
														"src": "3003:5:1",
														"type": ""
													}
												],
												"src": "2970:116:1"
											},
											{
												"body": {
													"nativeSrc": "3141:84:1",
													"nodeType": "YulBlock",
													"src": "3141:84:1",
													"statements": [
														{
															"nativeSrc": "3151:29:1",
															"nodeType": "YulAssignment",
															"src": "3151:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3173:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3173:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3160:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "3160:12:1"
																},
																"nativeSrc": "3160:20:1",
																"nodeType": "YulFunctionCall",
																"src": "3160:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3151:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "3151:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3213:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "3213:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "3189:23:1",
																	"nodeType": "YulIdentifier",
																	"src": "3189:23:1"
																},
																"nativeSrc": "3189:30:1",
																"nodeType": "YulFunctionCall",
																"src": "3189:30:1"
															},
															"nativeSrc": "3189:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "3189:30:1"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "3092:133:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3119:6:1",
														"nodeType": "YulTypedName",
														"src": "3119:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3127:3:1",
														"nodeType": "YulTypedName",
														"src": "3127:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3135:5:1",
														"nodeType": "YulTypedName",
														"src": "3135:5:1",
														"type": ""
													}
												],
												"src": "3092:133:1"
											},
											{
												"body": {
													"nativeSrc": "3294:260:1",
													"nodeType": "YulBlock",
													"src": "3294:260:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3340:83:1",
																"nodeType": "YulBlock",
																"src": "3340:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3342:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "3342:77:1"
																			},
																			"nativeSrc": "3342:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3342:79:1"
																		},
																		"nativeSrc": "3342:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3342:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3315:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3315:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3324:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3324:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3311:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3311:3:1"
																		},
																		"nativeSrc": "3311:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3311:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3336:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3336:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3307:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3307:3:1"
																},
																"nativeSrc": "3307:32:1",
																"nodeType": "YulFunctionCall",
																"src": "3307:32:1"
															},
															"nativeSrc": "3304:119:1",
															"nodeType": "YulIf",
															"src": "3304:119:1"
														},
														{
															"nativeSrc": "3433:114:1",
															"nodeType": "YulBlock",
															"src": "3433:114:1",
															"statements": [
																{
																	"nativeSrc": "3448:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3448:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3462:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3462:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3452:6:1",
																			"nodeType": "YulTypedName",
																			"src": "3452:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3477:60:1",
																	"nodeType": "YulAssignment",
																	"src": "3477:60:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3509:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "3509:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3520:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "3520:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3505:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3505:3:1"
																				},
																				"nativeSrc": "3505:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3505:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3529:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3529:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "3487:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "3487:17:1"
																		},
																		"nativeSrc": "3487:50:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3487:50:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3477:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "3477:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nativeSrc": "3231:323:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3264:9:1",
														"nodeType": "YulTypedName",
														"src": "3264:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3275:7:1",
														"nodeType": "YulTypedName",
														"src": "3275:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3287:6:1",
														"nodeType": "YulTypedName",
														"src": "3287:6:1",
														"type": ""
													}
												],
												"src": "3231:323:1"
											},
											{
												"body": {
													"nativeSrc": "3625:53:1",
													"nodeType": "YulBlock",
													"src": "3625:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3642:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3642:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3665:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3665:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3647:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "3647:17:1"
																		},
																		"nativeSrc": "3647:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3647:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3635:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3635:6:1"
																},
																"nativeSrc": "3635:37:1",
																"nodeType": "YulFunctionCall",
																"src": "3635:37:1"
															},
															"nativeSrc": "3635:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "3635:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3560:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3613:5:1",
														"nodeType": "YulTypedName",
														"src": "3613:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3620:3:1",
														"nodeType": "YulTypedName",
														"src": "3620:3:1",
														"type": ""
													}
												],
												"src": "3560:118:1"
											},
											{
												"body": {
													"nativeSrc": "3782:124:1",
													"nodeType": "YulBlock",
													"src": "3782:124:1",
													"statements": [
														{
															"nativeSrc": "3792:26:1",
															"nodeType": "YulAssignment",
															"src": "3792:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3804:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3804:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3815:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3815:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3800:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3800:3:1"
																},
																"nativeSrc": "3800:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3800:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3792:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3792:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3872:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3872:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3885:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3885:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3896:1:1",
																				"nodeType": "YulLiteral",
																				"src": "3896:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3881:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3881:3:1"
																		},
																		"nativeSrc": "3881:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3881:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3828:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "3828:43:1"
																},
																"nativeSrc": "3828:71:1",
																"nodeType": "YulFunctionCall",
																"src": "3828:71:1"
															},
															"nativeSrc": "3828:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "3828:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3684:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3754:9:1",
														"nodeType": "YulTypedName",
														"src": "3754:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3766:6:1",
														"nodeType": "YulTypedName",
														"src": "3766:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3777:4:1",
														"nodeType": "YulTypedName",
														"src": "3777:4:1",
														"type": ""
													}
												],
												"src": "3684:222:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_bytes32t_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint128(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffff)\n    }\n\n    function abi_encode_t_uint128_to_t_uint128_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint128(value))\n    }\n\n    function abi_encode_tuple_t_uint128_t_uint128_t_uint128__to_t_uint128_t_uint128_t_uint128__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint128_to_t_uint128_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint128_to_t_uint128_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint128_to_t_uint128_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061003f575f3560e01c8063198e54c41461004357806336091dff146100755780636353e8e6146100a5575b5f80fd5b61005d6004803603810190610058919061035b565b6100d7565b60405161006c939291906103d5565b60405180910390f35b61008f600480360381019061008a919061043f565b610163565b60405161009c9190610479565b60405180910390f35b6100bf60048036038101906100ba919061035b565b61020a565b6040516100ce939291906103d5565b60405180910390f35b5f602052825f5260405f20602052815f5260405f20602052805f5260405f205f925092505050805f015f9054906101000a90046fffffffffffffffffffffffffffffffff1690805f0160109054906101000a90046fffffffffffffffffffffffffffffffff1690806001015f9054906101000a90046fffffffffffffffffffffffffffffffff16905083565b5f8082610171576001610173565b5f5b9050805f8081526020019081526020015f205f805f1b81526020019081526020015f205f8073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001015f9054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16915050919050565b6001602052825f5260405f20602052815f5260405f20602052805f5260405f205f925092505050805f015f9054906101000a90046fffffffffffffffffffffffffffffffff1690805f0160109054906101000a90046fffffffffffffffffffffffffffffffff1690806001015f9054906101000a90046fffffffffffffffffffffffffffffffff16905083565b5f80fd5b5f819050919050565b6102ad8161029b565b81146102b7575f80fd5b50565b5f813590506102c8816102a4565b92915050565b5f819050919050565b6102e0816102ce565b81146102ea575f80fd5b50565b5f813590506102fb816102d7565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61032a82610301565b9050919050565b61033a81610320565b8114610344575f80fd5b50565b5f8135905061035581610331565b92915050565b5f805f6060848603121561037257610371610297565b5b5f61037f868287016102ba565b9350506020610390868287016102ed565b92505060406103a186828701610347565b9150509250925092565b5f6fffffffffffffffffffffffffffffffff82169050919050565b6103cf816103ab565b82525050565b5f6060820190506103e85f8301866103c6565b6103f560208301856103c6565b61040260408301846103c6565b949350505050565b5f8115159050919050565b61041e8161040a565b8114610428575f80fd5b50565b5f8135905061043981610415565b92915050565b5f6020828403121561045457610453610297565b5b5f6104618482850161042b565b91505092915050565b6104738161029b565b82525050565b5f60208201905061048c5f83018461046a565b9291505056fea2646970667358221220382edec6aa932e6e9478110859da067bcb2dad2d8cbcc4b9377ffd2a9945802b64736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x198E54C4 EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0x36091DFF EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0x6353E8E6 EQ PUSH2 0xA5 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x5D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x58 SWAP2 SWAP1 PUSH2 0x35B JUMP JUMPDEST PUSH2 0xD7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8A SWAP2 SWAP1 PUSH2 0x43F JUMP JUMPDEST PUSH2 0x163 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9C SWAP2 SWAP1 PUSH2 0x479 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBA SWAP2 SWAP1 PUSH2 0x35B JUMP JUMPDEST PUSH2 0x20A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH1 0x20 MSTORE DUP3 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP3 POP SWAP3 POP POP POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH0 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP4 JUMP JUMPDEST PUSH0 DUP1 DUP3 PUSH2 0x171 JUMPI PUSH1 0x1 PUSH2 0x173 JUMP JUMPDEST PUSH0 JUMPDEST SWAP1 POP DUP1 PUSH0 DUP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP1 PUSH0 SHL DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP3 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP3 POP SWAP3 POP POP POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH0 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP4 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2AD DUP2 PUSH2 0x29B JUMP JUMPDEST DUP2 EQ PUSH2 0x2B7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2C8 DUP2 PUSH2 0x2A4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2E0 DUP2 PUSH2 0x2CE JUMP JUMPDEST DUP2 EQ PUSH2 0x2EA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2FB DUP2 PUSH2 0x2D7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x32A DUP3 PUSH2 0x301 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x33A DUP2 PUSH2 0x320 JUMP JUMPDEST DUP2 EQ PUSH2 0x344 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x355 DUP2 PUSH2 0x331 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x372 JUMPI PUSH2 0x371 PUSH2 0x297 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x37F DUP7 DUP3 DUP8 ADD PUSH2 0x2BA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x390 DUP7 DUP3 DUP8 ADD PUSH2 0x2ED JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3A1 DUP7 DUP3 DUP8 ADD PUSH2 0x347 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3CF DUP2 PUSH2 0x3AB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3E8 PUSH0 DUP4 ADD DUP7 PUSH2 0x3C6 JUMP JUMPDEST PUSH2 0x3F5 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x3C6 JUMP JUMPDEST PUSH2 0x402 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3C6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x41E DUP2 PUSH2 0x40A JUMP JUMPDEST DUP2 EQ PUSH2 0x428 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x439 DUP2 PUSH2 0x415 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x454 JUMPI PUSH2 0x453 PUSH2 0x297 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x461 DUP5 DUP3 DUP6 ADD PUSH2 0x42B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x473 DUP2 PUSH2 0x29B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x48C PUSH0 DUP4 ADD DUP5 PUSH2 0x46A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE 0x2E 0xDE 0xC6 0xAA SWAP4 0x2E PUSH15 0x9478110859DA067BCB2DAD2D8CBCC4 0xB9 CALLDATACOPY PUSH32 0xFD2A9945802B64736F6C63430008180033000000000000000000000000000000 ",
							"sourceMap": "76:1348:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;615:137;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;1057:362;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;759:129;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;615:137;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1057:362::-;1108:7;1138:132;1281:10;:59;;1321:18;1281:59;;;1295:21;1281:59;1138:202;;1360:20;:23;1381:1;1360:23;;;;;;;;;;;:26;1384:1;1360:26;;;;;;;;;;;;;:38;1395:1;1360:38;;;;;;;;;;;;;;;:51;;;;;;;;;;;;1353:58;;;;;1057:362;;;:::o;759:129::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;88:117:1:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:77::-;727:7;756:5;745:16;;690:77;;;:::o;773:122::-;846:24;864:5;846:24;:::i;:::-;839:5;836:35;826:63;;885:1;882;875:12;826:63;773:122;:::o;901:139::-;947:5;985:6;972:20;963:29;;1001:33;1028:5;1001:33;:::i;:::-;901:139;;;;:::o;1046:126::-;1083:7;1123:42;1116:5;1112:54;1101:65;;1046:126;;;:::o;1178:96::-;1215:7;1244:24;1262:5;1244:24;:::i;:::-;1233:35;;1178:96;;;:::o;1280:122::-;1353:24;1371:5;1353:24;:::i;:::-;1346:5;1343:35;1333:63;;1392:1;1389;1382:12;1333:63;1280:122;:::o;1408:139::-;1454:5;1492:6;1479:20;1470:29;;1508:33;1535:5;1508:33;:::i;:::-;1408:139;;;;:::o;1553:619::-;1630:6;1638;1646;1695:2;1683:9;1674:7;1670:23;1666:32;1663:119;;;1701:79;;:::i;:::-;1663:119;1821:1;1846:53;1891:7;1882:6;1871:9;1867:22;1846:53;:::i;:::-;1836:63;;1792:117;1948:2;1974:53;2019:7;2010:6;1999:9;1995:22;1974:53;:::i;:::-;1964:63;;1919:118;2076:2;2102:53;2147:7;2138:6;2127:9;2123:22;2102:53;:::i;:::-;2092:63;;2047:118;1553:619;;;;;:::o;2178:118::-;2215:7;2255:34;2248:5;2244:46;2233:57;;2178:118;;;:::o;2302:::-;2389:24;2407:5;2389:24;:::i;:::-;2384:3;2377:37;2302:118;;:::o;2426:442::-;2575:4;2613:2;2602:9;2598:18;2590:26;;2626:71;2694:1;2683:9;2679:17;2670:6;2626:71;:::i;:::-;2707:72;2775:2;2764:9;2760:18;2751:6;2707:72;:::i;:::-;2789;2857:2;2846:9;2842:18;2833:6;2789:72;:::i;:::-;2426:442;;;;;;:::o;2874:90::-;2908:7;2951:5;2944:13;2937:21;2926:32;;2874:90;;;:::o;2970:116::-;3040:21;3055:5;3040:21;:::i;:::-;3033:5;3030:32;3020:60;;3076:1;3073;3066:12;3020:60;2970:116;:::o;3092:133::-;3135:5;3173:6;3160:20;3151:29;;3189:30;3213:5;3189:30;:::i;:::-;3092:133;;;;:::o;3231:323::-;3287:6;3336:2;3324:9;3315:7;3311:23;3307:32;3304:119;;;3342:79;;:::i;:::-;3304:119;3462:1;3487:50;3529:7;3520:6;3509:9;3505:22;3487:50;:::i;:::-;3477:60;;3433:114;3231:323;;;;:::o;3560:118::-;3647:24;3665:5;3647:24;:::i;:::-;3642:3;3635:37;3560:118;;:::o;3684:222::-;3777:4;3815:2;3804:9;3800:18;3792:26;;3828:71;3896:1;3885:9;3881:17;3872:6;3828:71;:::i;:::-;3684:222;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "244800",
								"executionCost": "49319",
								"totalCost": "294119"
							},
							"external": {
								"delegateEpochPoolData(uint256,bytes32,address)": "infinite",
								"test(bool)": "3032",
								"usersEpochPoolData(uint256,bytes32,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 76,
									"end": 1424,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 76,
									"end": 1424,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 76,
									"end": 1424,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 897,
									"end": 1049,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 897,
									"end": 1049,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 897,
									"end": 1049,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 897,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 897,
									"end": 1049,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 897,
									"end": 1049,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 897,
									"end": 1049,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 897,
									"end": 1049,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 897,
									"end": 1049,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 897,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 897,
									"end": 1049,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 973,
									"end": 974,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 921,
									"end": 939,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 921,
									"end": 942,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 940,
									"end": 941,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 921,
									"end": 942,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 921,
									"end": 942,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 921,
									"end": 942,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 921,
									"end": 942,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 921,
									"end": 942,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 921,
									"end": 942,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 921,
									"end": 942,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 921,
									"end": 942,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 921,
									"end": 942,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 921,
									"end": 942,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 921,
									"end": 942,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 921,
									"end": 945,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 943,
									"end": 944,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 921,
									"end": 945,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 921,
									"end": 945,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 921,
									"end": 945,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 921,
									"end": 945,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 921,
									"end": 945,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 921,
									"end": 945,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 921,
									"end": 945,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 921,
									"end": 945,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 921,
									"end": 945,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 921,
									"end": 945,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 921,
									"end": 945,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 921,
									"end": 945,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 921,
									"end": 945,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 921,
									"end": 957,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 954,
									"end": 955,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 921,
									"end": 957,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 921,
									"end": 957,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 921,
									"end": 957,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 921,
									"end": 957,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 921,
									"end": 957,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 921,
									"end": 957,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 921,
									"end": 957,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 921,
									"end": 957,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 921,
									"end": 957,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 921,
									"end": 957,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 921,
									"end": 957,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 921,
									"end": 957,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 921,
									"end": 957,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 921,
									"end": 957,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 921,
									"end": 957,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 921,
									"end": 970,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 921,
									"end": 970,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 921,
									"end": 970,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 921,
									"end": 974,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 921,
									"end": 974,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 921,
									"end": 974,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 921,
									"end": 974,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 921,
									"end": 974,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 921,
									"end": 974,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 921,
									"end": 974,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 921,
									"end": 974,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 921,
									"end": 974,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 921,
									"end": 974,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 921,
									"end": 974,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 921,
									"end": 974,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 921,
									"end": 974,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 921,
									"end": 974,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 921,
									"end": 974,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 921,
									"end": 974,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 921,
									"end": 974,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 921,
									"end": 974,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 985,
									"end": 1006,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 985,
									"end": 1009,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1007,
									"end": 1008,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 985,
									"end": 1009,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 985,
									"end": 1009,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 985,
									"end": 1009,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 985,
									"end": 1009,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 985,
									"end": 1009,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 985,
									"end": 1009,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 985,
									"end": 1009,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 985,
									"end": 1009,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 985,
									"end": 1009,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 985,
									"end": 1009,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 985,
									"end": 1009,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 985,
									"end": 1012,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1010,
									"end": 1011,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 985,
									"end": 1012,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 985,
									"end": 1012,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 985,
									"end": 1012,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 985,
									"end": 1012,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 985,
									"end": 1012,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 985,
									"end": 1012,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 985,
									"end": 1012,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 985,
									"end": 1012,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 985,
									"end": 1012,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 985,
									"end": 1012,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 985,
									"end": 1012,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 985,
									"end": 1012,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 985,
									"end": 1012,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 985,
									"end": 1024,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1021,
									"end": 1022,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 985,
									"end": 1024,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 985,
									"end": 1024,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 985,
									"end": 1024,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 985,
									"end": 1024,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 985,
									"end": 1024,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 985,
									"end": 1024,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 985,
									"end": 1024,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 985,
									"end": 1024,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 985,
									"end": 1024,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 985,
									"end": 1024,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 985,
									"end": 1024,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 985,
									"end": 1024,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 985,
									"end": 1024,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 985,
									"end": 1024,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 985,
									"end": 1024,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 985,
									"end": 1037,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 985,
									"end": 1037,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 985,
									"end": 1037,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 985,
									"end": 1041,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 985,
									"end": 1041,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 985,
									"end": 1041,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 985,
									"end": 1041,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 985,
									"end": 1041,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 985,
									"end": 1041,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 985,
									"end": 1041,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 985,
									"end": 1041,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 985,
									"end": 1041,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 985,
									"end": 1041,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 985,
									"end": 1041,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 985,
									"end": 1041,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 985,
									"end": 1041,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 985,
									"end": 1041,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 985,
									"end": 1041,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 985,
									"end": 1041,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 985,
									"end": 1041,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 985,
									"end": 1041,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 76,
									"end": 1424,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 76,
									"end": 1424,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 76,
									"end": 1424,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 76,
									"end": 1424,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 76,
									"end": 1424,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 76,
									"end": 1424,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 76,
									"end": 1424,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220382edec6aa932e6e9478110859da067bcb2dad2d8cbcc4b9377ffd2a9945802b64736f6c63430008180033",
									".code": [
										{
											"begin": 76,
											"end": 1424,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 76,
											"end": 1424,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 76,
											"end": 1424,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 76,
											"end": 1424,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 76,
											"end": 1424,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 76,
											"end": 1424,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 76,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 76,
											"end": 1424,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 76,
											"end": 1424,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76,
											"end": 1424,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 76,
											"end": 1424,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 76,
											"end": 1424,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 76,
											"end": 1424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 76,
											"end": 1424,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 76,
											"end": 1424,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 76,
											"end": 1424,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 76,
											"end": 1424,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 76,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 76,
											"end": 1424,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 76,
											"end": 1424,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76,
											"end": 1424,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 76,
											"end": 1424,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 76,
											"end": 1424,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 76,
											"end": 1424,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 76,
											"end": 1424,
											"name": "PUSH",
											"source": 0,
											"value": "198E54C4"
										},
										{
											"begin": 76,
											"end": 1424,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 76,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 76,
											"end": 1424,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 76,
											"end": 1424,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 76,
											"end": 1424,
											"name": "PUSH",
											"source": 0,
											"value": "36091DFF"
										},
										{
											"begin": 76,
											"end": 1424,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 76,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 76,
											"end": 1424,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 76,
											"end": 1424,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 76,
											"end": 1424,
											"name": "PUSH",
											"source": 0,
											"value": "6353E8E6"
										},
										{
											"begin": 76,
											"end": 1424,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 76,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 76,
											"end": 1424,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 76,
											"end": 1424,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 76,
											"end": 1424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 76,
											"end": 1424,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76,
											"end": 1424,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 76,
											"end": 1424,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 615,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 615,
											"end": 752,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 615,
											"end": 752,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 615,
											"end": 752,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 615,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 615,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 615,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 615,
											"end": 752,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 615,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 615,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 615,
											"end": 752,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 615,
											"end": 752,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 615,
											"end": 752,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1057,
											"end": 1419,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1057,
											"end": 1419,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1057,
											"end": 1419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1057,
											"end": 1419,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1057,
											"end": 1419,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1057,
											"end": 1419,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1057,
											"end": 1419,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1057,
											"end": 1419,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1057,
											"end": 1419,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1057,
											"end": 1419,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1057,
											"end": 1419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1057,
											"end": 1419,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1057,
											"end": 1419,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1057,
											"end": 1419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1057,
											"end": 1419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1057,
											"end": 1419,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1057,
											"end": 1419,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1057,
											"end": 1419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1057,
											"end": 1419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1057,
											"end": 1419,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1057,
											"end": 1419,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1057,
											"end": 1419,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1057,
											"end": 1419,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1057,
											"end": 1419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1057,
											"end": 1419,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1057,
											"end": 1419,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1057,
											"end": 1419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1057,
											"end": 1419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1057,
											"end": 1419,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1057,
											"end": 1419,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1057,
											"end": 1419,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1057,
											"end": 1419,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1057,
											"end": 1419,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1057,
											"end": 1419,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1057,
											"end": 1419,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1057,
											"end": 1419,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1057,
											"end": 1419,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 759,
											"end": 888,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 759,
											"end": 888,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 759,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 759,
											"end": 888,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 759,
											"end": 888,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 759,
											"end": 888,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 759,
											"end": 888,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 759,
											"end": 888,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 759,
											"end": 888,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 759,
											"end": 888,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 759,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 759,
											"end": 888,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 759,
											"end": 888,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 759,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 759,
											"end": 888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 759,
											"end": 888,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 759,
											"end": 888,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 759,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 759,
											"end": 888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 759,
											"end": 888,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 759,
											"end": 888,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 759,
											"end": 888,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 759,
											"end": 888,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 759,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 759,
											"end": 888,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 759,
											"end": 888,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 759,
											"end": 888,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 759,
											"end": 888,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 759,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 759,
											"end": 888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 759,
											"end": 888,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 759,
											"end": 888,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 759,
											"end": 888,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 759,
											"end": 888,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 759,
											"end": 888,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 759,
											"end": 888,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 759,
											"end": 888,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 759,
											"end": 888,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 759,
											"end": 888,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 615,
											"end": 752,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 615,
											"end": 752,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 615,
											"end": 752,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 615,
											"end": 752,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 615,
											"end": 752,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 615,
											"end": 752,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 615,
											"end": 752,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 615,
											"end": 752,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 615,
											"end": 752,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 615,
											"end": 752,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 615,
											"end": 752,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 615,
											"end": 752,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 615,
											"end": 752,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 615,
											"end": 752,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 615,
											"end": 752,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 615,
											"end": 752,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 615,
											"end": 752,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 615,
											"end": 752,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 615,
											"end": 752,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 615,
											"end": 752,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 615,
											"end": 752,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 615,
											"end": 752,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 615,
											"end": 752,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 615,
											"end": 752,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 615,
											"end": 752,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 615,
											"end": 752,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 615,
											"end": 752,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 615,
											"end": 752,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 615,
											"end": 752,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 615,
											"end": 752,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 615,
											"end": 752,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 615,
											"end": 752,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1057,
											"end": 1419,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1057,
											"end": 1419,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1115,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1138,
											"end": 1270,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1281,
											"end": 1291,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1281,
											"end": 1340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1281,
											"end": 1340,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1321,
											"end": 1339,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1281,
											"end": 1340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1281,
											"end": 1340,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1281,
											"end": 1340,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1281,
											"end": 1340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1316,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1281,
											"end": 1340,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1281,
											"end": 1340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1340,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1340,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1380,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1383,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1381,
											"end": 1382,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1383,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1383,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1383,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1360,
											"end": 1383,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1383,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1383,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1383,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1360,
											"end": 1383,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1383,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1360,
											"end": 1383,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1386,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1384,
											"end": 1385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1386,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1360,
											"end": 1386,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1386,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1386,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1386,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1360,
											"end": 1386,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1386,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1386,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1386,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1360,
											"end": 1386,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1386,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1360,
											"end": 1386,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1398,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1395,
											"end": 1396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1398,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1360,
											"end": 1398,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1398,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1360,
											"end": 1398,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1398,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1398,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1398,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1360,
											"end": 1398,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1398,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1398,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1398,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1398,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1360,
											"end": 1398,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1398,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1360,
											"end": 1398,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1353,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1353,
											"end": 1411,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1353,
											"end": 1411,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1353,
											"end": 1411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1353,
											"end": 1411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1057,
											"end": 1419,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1057,
											"end": 1419,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1057,
											"end": 1419,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1057,
											"end": 1419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 759,
											"end": 888,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 759,
											"end": 888,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 759,
											"end": 888,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 759,
											"end": 888,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 759,
											"end": 888,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 759,
											"end": 888,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 759,
											"end": 888,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 759,
											"end": 888,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 759,
											"end": 888,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 759,
											"end": 888,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 759,
											"end": 888,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 759,
											"end": 888,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 759,
											"end": 888,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 759,
											"end": 888,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 759,
											"end": 888,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 759,
											"end": 888,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 759,
											"end": 888,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 759,
											"end": 888,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 759,
											"end": 888,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 759,
											"end": 888,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 759,
											"end": 888,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 759,
											"end": 888,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 759,
											"end": 888,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 759,
											"end": 888,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 759,
											"end": 888,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 759,
											"end": 888,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 759,
											"end": 888,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 759,
											"end": 888,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 759,
											"end": 888,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 759,
											"end": 888,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 759,
											"end": 888,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 759,
											"end": 888,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 759,
											"end": 888,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 759,
											"end": 888,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 759,
											"end": 888,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 759,
											"end": 888,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 759,
											"end": 888,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 759,
											"end": 888,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 759,
											"end": 888,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 759,
											"end": 888,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 759,
											"end": 888,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 759,
											"end": 888,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 759,
											"end": 888,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 759,
											"end": 888,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 759,
											"end": 888,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 759,
											"end": 888,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 759,
											"end": 888,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 759,
											"end": 888,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 759,
											"end": 888,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 759,
											"end": 888,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 759,
											"end": 888,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 759,
											"end": 888,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 759,
											"end": 888,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 759,
											"end": 888,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 759,
											"end": 888,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 759,
											"end": 888,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 759,
											"end": 888,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 759,
											"end": 888,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 759,
											"end": 888,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 759,
											"end": 888,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 759,
											"end": 888,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 759,
											"end": 888,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 759,
											"end": 888,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 759,
											"end": 888,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 759,
											"end": 888,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 759,
											"end": 888,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 759,
											"end": 888,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 759,
											"end": 888,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 759,
											"end": 888,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 759,
											"end": 888,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 759,
											"end": 888,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 759,
											"end": 888,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 759,
											"end": 888,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 759,
											"end": 888,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 759,
											"end": 888,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 759,
											"end": 888,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 759,
											"end": 888,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 759,
											"end": 888,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 759,
											"end": 888,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 767,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 690,
											"end": 767,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 727,
											"end": 734,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 756,
											"end": 761,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 745,
											"end": 761,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 745,
											"end": 761,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 767,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 690,
											"end": 767,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 690,
											"end": 767,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 773,
											"end": 895,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 773,
											"end": 895,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 846,
											"end": 870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 864,
											"end": 869,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 846,
											"end": 870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 846,
											"end": 870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 846,
											"end": 870,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 846,
											"end": 870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 839,
											"end": 844,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 836,
											"end": 871,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 826,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 826,
											"end": 889,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 885,
											"end": 886,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 882,
											"end": 883,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 875,
											"end": 887,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 826,
											"end": 889,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 826,
											"end": 889,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 773,
											"end": 895,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 773,
											"end": 895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 901,
											"end": 1040,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 901,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 947,
											"end": 952,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 972,
											"end": 992,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 963,
											"end": 992,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 963,
											"end": 992,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1001,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1028,
											"end": 1033,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1001,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1001,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1001,
											"end": 1034,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1001,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 901,
											"end": 1040,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 901,
											"end": 1040,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 901,
											"end": 1040,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 901,
											"end": 1040,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 901,
											"end": 1040,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1172,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1046,
											"end": 1172,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1090,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1123,
											"end": 1165,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1116,
											"end": 1121,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1112,
											"end": 1166,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1101,
											"end": 1166,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1101,
											"end": 1166,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1172,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1172,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1172,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1172,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1178,
											"end": 1274,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1178,
											"end": 1274,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1215,
											"end": 1222,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1262,
											"end": 1267,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1244,
											"end": 1268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1233,
											"end": 1268,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1233,
											"end": 1268,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1178,
											"end": 1274,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1178,
											"end": 1274,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1178,
											"end": 1274,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1178,
											"end": 1274,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1280,
											"end": 1402,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1280,
											"end": 1402,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1377,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1371,
											"end": 1376,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1377,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1353,
											"end": 1377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1377,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1353,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1346,
											"end": 1351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1343,
											"end": 1378,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1333,
											"end": 1396,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1333,
											"end": 1396,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1393,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1389,
											"end": 1390,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1382,
											"end": 1394,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1333,
											"end": 1396,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1333,
											"end": 1396,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1280,
											"end": 1402,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1280,
											"end": 1402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1408,
											"end": 1547,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1408,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1454,
											"end": 1459,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1492,
											"end": 1498,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1479,
											"end": 1499,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1470,
											"end": 1499,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1470,
											"end": 1499,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1508,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1535,
											"end": 1540,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1508,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1508,
											"end": 1541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1508,
											"end": 1541,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1508,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1408,
											"end": 1547,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1408,
											"end": 1547,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1408,
											"end": 1547,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1408,
											"end": 1547,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1408,
											"end": 1547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 2172,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1553,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1630,
											"end": 1636,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1644,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1652,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1695,
											"end": 1697,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1683,
											"end": 1692,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1674,
											"end": 1681,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1693,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1666,
											"end": 1698,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1663,
											"end": 1782,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1663,
											"end": 1782,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1663,
											"end": 1782,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1780,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1701,
											"end": 1780,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1701,
											"end": 1780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1780,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1701,
											"end": 1780,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1663,
											"end": 1782,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1663,
											"end": 1782,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1821,
											"end": 1822,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1846,
											"end": 1899,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1891,
											"end": 1898,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1882,
											"end": 1888,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1880,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1889,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1846,
											"end": 1899,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1846,
											"end": 1899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1846,
											"end": 1899,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1846,
											"end": 1899,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1899,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1899,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 1909,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1948,
											"end": 1950,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1974,
											"end": 2027,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2019,
											"end": 2026,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2016,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1999,
											"end": 2008,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1995,
											"end": 2017,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1974,
											"end": 2027,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1974,
											"end": 2027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1974,
											"end": 2027,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1974,
											"end": 2027,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1964,
											"end": 2027,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1964,
											"end": 2027,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1919,
											"end": 2037,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2078,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2102,
											"end": 2155,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2147,
											"end": 2154,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2144,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2127,
											"end": 2136,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2123,
											"end": 2145,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2102,
											"end": 2155,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2102,
											"end": 2155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2102,
											"end": 2155,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2102,
											"end": 2155,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2092,
											"end": 2155,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2092,
											"end": 2155,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2047,
											"end": 2165,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 2172,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 2172,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 2172,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 2172,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 2172,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 2172,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2296,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2178,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2215,
											"end": 2222,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2255,
											"end": 2289,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2248,
											"end": 2253,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2244,
											"end": 2290,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2290,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2290,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2296,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2296,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2296,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2302,
											"end": 2420,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2302,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2389,
											"end": 2413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2407,
											"end": 2412,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2389,
											"end": 2413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2389,
											"end": 2413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2389,
											"end": 2413,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2389,
											"end": 2413,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2387,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2377,
											"end": 2414,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2302,
											"end": 2420,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2302,
											"end": 2420,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2302,
											"end": 2420,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2426,
											"end": 2868,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2426,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2575,
											"end": 2579,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2613,
											"end": 2615,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2602,
											"end": 2611,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2616,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2616,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2626,
											"end": 2697,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2694,
											"end": 2695,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2683,
											"end": 2692,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2679,
											"end": 2696,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2670,
											"end": 2676,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2626,
											"end": 2697,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2626,
											"end": 2697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2626,
											"end": 2697,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2626,
											"end": 2697,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2775,
											"end": 2777,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2764,
											"end": 2773,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2760,
											"end": 2778,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2751,
											"end": 2757,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2707,
											"end": 2779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2779,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2707,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2789,
											"end": 2861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2857,
											"end": 2859,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2846,
											"end": 2855,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2842,
											"end": 2860,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2789,
											"end": 2861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2789,
											"end": 2861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2789,
											"end": 2861,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2789,
											"end": 2861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2426,
											"end": 2868,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2426,
											"end": 2868,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2426,
											"end": 2868,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2426,
											"end": 2868,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2426,
											"end": 2868,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2426,
											"end": 2868,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2426,
											"end": 2868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2874,
											"end": 2964,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2874,
											"end": 2964,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2908,
											"end": 2915,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2951,
											"end": 2956,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2944,
											"end": 2957,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2937,
											"end": 2958,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2926,
											"end": 2958,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2926,
											"end": 2958,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2874,
											"end": 2964,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2874,
											"end": 2964,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2874,
											"end": 2964,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2874,
											"end": 2964,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3086,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2970,
											"end": 3086,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3040,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 3055,
											"end": 3060,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3040,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3040,
											"end": 3061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3040,
											"end": 3061,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 3040,
											"end": 3061,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3033,
											"end": 3038,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3030,
											"end": 3062,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3080,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3020,
											"end": 3080,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3077,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3073,
											"end": 3074,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3066,
											"end": 3078,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3080,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3020,
											"end": 3080,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3086,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3092,
											"end": 3225,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3092,
											"end": 3225,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3135,
											"end": 3140,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3173,
											"end": 3179,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3160,
											"end": 3180,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3151,
											"end": 3180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3151,
											"end": 3180,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3189,
											"end": 3219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 3213,
											"end": 3218,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3189,
											"end": 3219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3189,
											"end": 3219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3189,
											"end": 3219,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 3189,
											"end": 3219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3092,
											"end": 3225,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3092,
											"end": 3225,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3092,
											"end": 3225,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3092,
											"end": 3225,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3092,
											"end": 3225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3231,
											"end": 3554,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 3231,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3293,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3336,
											"end": 3338,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3324,
											"end": 3333,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3322,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3311,
											"end": 3334,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3307,
											"end": 3339,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3304,
											"end": 3423,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3304,
											"end": 3423,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3304,
											"end": 3423,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3342,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 3342,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3342,
											"end": 3421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3342,
											"end": 3421,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 3342,
											"end": 3421,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3304,
											"end": 3423,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3304,
											"end": 3423,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3462,
											"end": 3463,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3487,
											"end": 3537,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 3529,
											"end": 3536,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3520,
											"end": 3526,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3518,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3505,
											"end": 3527,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3487,
											"end": 3537,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3487,
											"end": 3537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3487,
											"end": 3537,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 3487,
											"end": 3537,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3477,
											"end": 3537,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3477,
											"end": 3537,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3433,
											"end": 3547,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3231,
											"end": 3554,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3231,
											"end": 3554,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3231,
											"end": 3554,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3231,
											"end": 3554,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3231,
											"end": 3554,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3560,
											"end": 3678,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3560,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3647,
											"end": 3671,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 3665,
											"end": 3670,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3647,
											"end": 3671,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3647,
											"end": 3671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3647,
											"end": 3671,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 3647,
											"end": 3671,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3642,
											"end": 3645,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3635,
											"end": 3672,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3560,
											"end": 3678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3560,
											"end": 3678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3560,
											"end": 3678,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3684,
											"end": 3906,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 3684,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3777,
											"end": 3781,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3815,
											"end": 3817,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3804,
											"end": 3813,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 3818,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3792,
											"end": 3818,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3792,
											"end": 3818,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3828,
											"end": 3899,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 3896,
											"end": 3897,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3885,
											"end": 3894,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3881,
											"end": 3898,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3872,
											"end": 3878,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3828,
											"end": 3899,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3828,
											"end": 3899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3828,
											"end": 3899,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 3828,
											"end": 3899,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3684,
											"end": 3906,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3684,
											"end": 3906,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3684,
											"end": 3906,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3684,
											"end": 3906,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3684,
											"end": 3906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"testMappingPointers.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"delegateEpochPoolData(uint256,bytes32,address)": "198e54c4",
							"test(bool)": "36091dff",
							"usersEpochPoolData(uint256,bytes32,address)": "6353e8e6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"}],\"name\":\"delegateEpochPoolData\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"totalVotesSpent\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"totalRewards\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"totalClaimed\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"isDelegate\",\"type\":\"bool\"}],\"name\":\"test\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"usersEpochPoolData\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"totalVotesSpent\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"totalRewards\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"totalClaimed\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"testMappingPointers.sol\":\"Test\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"testMappingPointers.sol\":{\"keccak256\":\"0x91b1092a2c08ff243289e517c775471f33b7f72523148cfb243e2f31429996cb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8aa652eb218573d8d045b3f85f6c84eef9e4fe0779a68071d873522e8e72ca5c\",\"dweb:/ipfs/QmTmGren8RT8RcXbsis7sS4UuKRLHJBS4bVt5MAcCjsygT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 28,
								"contract": "testMappingPointers.sol:Test",
								"label": "delegateEpochPoolData",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_struct(DelegateData)8_storage)))"
							},
							{
								"astId": 37,
								"contract": "testMappingPointers.sol:Test",
								"label": "usersEpochPoolData",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_struct(DelegateData)8_storage)))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_struct(DelegateData)8_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Test.DelegateData)",
								"numberOfBytes": "32",
								"value": "t_struct(DelegateData)8_storage"
							},
							"t_mapping(t_bytes32,t_mapping(t_address,t_struct(DelegateData)8_storage))": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => mapping(address => struct Test.DelegateData))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_struct(DelegateData)8_storage)"
							},
							"t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_struct(DelegateData)8_storage)))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(bytes32 => mapping(address => struct Test.DelegateData)))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_bytes32,t_mapping(t_address,t_struct(DelegateData)8_storage))"
							},
							"t_struct(DelegateData)8_storage": {
								"encoding": "inplace",
								"label": "struct Test.DelegateData",
								"members": [
									{
										"astId": 3,
										"contract": "testMappingPointers.sol:Test",
										"label": "totalVotesSpent",
										"offset": 0,
										"slot": "0",
										"type": "t_uint128"
									},
									{
										"astId": 5,
										"contract": "testMappingPointers.sol:Test",
										"label": "totalRewards",
										"offset": 16,
										"slot": "0",
										"type": "t_uint128"
									},
									{
										"astId": 7,
										"contract": "testMappingPointers.sol:Test",
										"label": "totalClaimed",
										"offset": 0,
										"slot": "1",
										"type": "t_uint128"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint128": {
								"encoding": "inplace",
								"label": "uint128",
								"numberOfBytes": "16"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"testMappingPointers.sol": {
				"ast": {
					"absolutePath": "testMappingPointers.sol",
					"exportedSymbols": {
						"Test": [
							106
						]
					},
					"id": 107,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".2",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Test",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 106,
							"linearizedBaseContracts": [
								106
							],
							"name": "Test",
							"nameLocation": "85:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Test.DelegateData",
									"id": 8,
									"members": [
										{
											"constant": false,
											"id": 3,
											"mutability": "mutable",
											"name": "totalVotesSpent",
											"nameLocation": "191:15:0",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "183:23:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 2,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "183:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5,
											"mutability": "mutable",
											"name": "totalRewards",
											"nameLocation": "225:12:0",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "217:20:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 4,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "217:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 7,
											"mutability": "mutable",
											"name": "totalClaimed",
											"nameLocation": "256:12:0",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "248:20:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 6,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "248:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "DelegateData",
									"nameLocation": "159:12:0",
									"nodeType": "StructDefinition",
									"scope": 106,
									"src": "152:124:0",
									"visibility": "public"
								},
								{
									"canonicalName": "Test.User",
									"id": 19,
									"members": [
										{
											"constant": false,
											"id": 10,
											"mutability": "mutable",
											"name": "totalVotesSpent",
											"nameLocation": "315:15:0",
											"nodeType": "VariableDeclaration",
											"scope": 19,
											"src": "307:23:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 9,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "307:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 12,
											"mutability": "mutable",
											"name": "totalRewards",
											"nameLocation": "349:12:0",
											"nodeType": "VariableDeclaration",
											"scope": 19,
											"src": "341:20:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 11,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "341:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 14,
											"mutability": "mutable",
											"name": "totalClaimed",
											"nameLocation": "380:12:0",
											"nodeType": "VariableDeclaration",
											"scope": 19,
											"src": "372:20:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 13,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "372:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 16,
											"mutability": "mutable",
											"name": "totalDelegated",
											"nameLocation": "444:14:0",
											"nodeType": "VariableDeclaration",
											"scope": 19,
											"src": "436:22:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 15,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "436:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "delegate",
											"nameLocation": "578:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 19,
											"src": "570:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 17,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "570:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "User",
									"nameLocation": "291:4:0",
									"nodeType": "StructDefinition",
									"scope": 106,
									"src": "284:323:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "198e54c4",
									"id": 28,
									"mutability": "mutable",
									"name": "delegateEpochPoolData",
									"nameLocation": "731:21:0",
									"nodeType": "VariableDeclaration",
									"scope": 106,
									"src": "615:137:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_struct$_DelegateData_$8_storage_$_$_$",
										"typeString": "mapping(uint256 => mapping(bytes32 => mapping(address => struct Test.DelegateData)))"
									},
									"typeName": {
										"id": 27,
										"keyName": "epoch",
										"keyNameLocation": "631:5:0",
										"keyType": {
											"id": 20,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "623:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "615:108:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_struct$_DelegateData_$8_storage_$_$_$",
											"typeString": "mapping(uint256 => mapping(bytes32 => mapping(address => struct Test.DelegateData)))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 26,
											"keyName": "poolId",
											"keyNameLocation": "656:6:0",
											"keyType": {
												"id": 21,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "648:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"nodeType": "Mapping",
											"src": "640:82:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_struct$_DelegateData_$8_storage_$_$",
												"typeString": "mapping(bytes32 => mapping(address => struct Test.DelegateData))"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 25,
												"keyName": "delegate",
												"keyNameLocation": "682:8:0",
												"keyType": {
													"id": 22,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "674:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "666:55:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_struct$_DelegateData_$8_storage_$",
													"typeString": "mapping(address => struct Test.DelegateData)"
												},
												"valueName": "delegateAgent",
												"valueNameLocation": "707:13:0",
												"valueType": {
													"id": 24,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 23,
														"name": "DelegateData",
														"nameLocations": [
															"694:12:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 8,
														"src": "694:12:0"
													},
													"referencedDeclaration": 8,
													"src": "694:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_DelegateData_$8_storage_ptr",
														"typeString": "struct Test.DelegateData"
													}
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6353e8e6",
									"id": 37,
									"mutability": "mutable",
									"name": "usersEpochPoolData",
									"nameLocation": "870:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 106,
									"src": "759:129:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_struct$_DelegateData_$8_storage_$_$_$",
										"typeString": "mapping(uint256 => mapping(bytes32 => mapping(address => struct Test.DelegateData)))"
									},
									"typeName": {
										"id": 36,
										"keyName": "epoch",
										"keyNameLocation": "775:5:0",
										"keyType": {
											"id": 29,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "767:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "759:103:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_struct$_DelegateData_$8_storage_$_$_$",
											"typeString": "mapping(uint256 => mapping(bytes32 => mapping(address => struct Test.DelegateData)))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 35,
											"keyName": "poolId",
											"keyNameLocation": "800:6:0",
											"keyType": {
												"id": 30,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "792:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"nodeType": "Mapping",
											"src": "784:77:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_struct$_DelegateData_$8_storage_$_$",
												"typeString": "mapping(bytes32 => mapping(address => struct Test.DelegateData))"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 34,
												"keyName": "user",
												"keyNameLocation": "826:4:0",
												"keyType": {
													"id": 31,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "818:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "810:50:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_struct$_DelegateData_$8_storage_$",
													"typeString": "mapping(address => struct Test.DelegateData)"
												},
												"valueName": "userPoolData",
												"valueNameLocation": "847:12:0",
												"valueType": {
													"id": 33,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 32,
														"name": "DelegateData",
														"nameLocations": [
															"834:12:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 8,
														"src": "834:12:0"
													},
													"referencedDeclaration": 8,
													"src": "834:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_DelegateData_$8_storage_ptr",
														"typeString": "struct Test.DelegateData"
													}
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 68,
										"nodeType": "Block",
										"src": "910:139:0",
										"statements": [
											{
												"expression": {
													"id": 52,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 40,
																		"name": "usersEpochPoolData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 37,
																		"src": "921:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_struct$_DelegateData_$8_storage_$_$_$",
																			"typeString": "mapping(uint256 => mapping(bytes32 => mapping(address => struct Test.DelegateData storage ref)))"
																		}
																	},
																	"id": 47,
																	"indexExpression": {
																		"hexValue": "30",
																		"id": 41,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "940:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "921:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_struct$_DelegateData_$8_storage_$_$",
																		"typeString": "mapping(bytes32 => mapping(address => struct Test.DelegateData storage ref))"
																	}
																},
																"id": 48,
																"indexExpression": {
																	"hexValue": "30",
																	"id": 42,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "943:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "921:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_DelegateData_$8_storage_$",
																	"typeString": "mapping(address => struct Test.DelegateData storage ref)"
																}
															},
															"id": 49,
															"indexExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 45,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "954:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 44,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "946:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 43,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "946:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "946:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "921:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DelegateData_$8_storage",
																"typeString": "struct Test.DelegateData storage ref"
															}
														},
														"id": 50,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "958:12:0",
														"memberName": "totalClaimed",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 7,
														"src": "921:49:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 51,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "973:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "921:53:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"id": 53,
												"nodeType": "ExpressionStatement",
												"src": "921:53:0"
											},
											{
												"expression": {
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 54,
																		"name": "delegateEpochPoolData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 28,
																		"src": "985:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_struct$_DelegateData_$8_storage_$_$_$",
																			"typeString": "mapping(uint256 => mapping(bytes32 => mapping(address => struct Test.DelegateData storage ref)))"
																		}
																	},
																	"id": 61,
																	"indexExpression": {
																		"hexValue": "30",
																		"id": 55,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1007:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "985:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_struct$_DelegateData_$8_storage_$_$",
																		"typeString": "mapping(bytes32 => mapping(address => struct Test.DelegateData storage ref))"
																	}
																},
																"id": 62,
																"indexExpression": {
																	"hexValue": "30",
																	"id": 56,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1010:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "985:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_DelegateData_$8_storage_$",
																	"typeString": "mapping(address => struct Test.DelegateData storage ref)"
																}
															},
															"id": 63,
															"indexExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 59,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1021:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 58,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1013:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 57,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1013:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 60,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1013:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "985:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DelegateData_$8_storage",
																"typeString": "struct Test.DelegateData storage ref"
															}
														},
														"id": 64,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1025:12:0",
														"memberName": "totalClaimed",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 7,
														"src": "985:52:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "32",
														"id": 65,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1040:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "985:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"id": 67,
												"nodeType": "ExpressionStatement",
												"src": "985:56:0"
											}
										]
									},
									"id": 69,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:0"
									},
									"returnParameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "910:0:0"
									},
									"scope": 106,
									"src": "897:152:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "1117:302:0",
										"statements": [
											{
												"assignments": [
													84
												],
												"declarations": [
													{
														"constant": false,
														"id": 84,
														"mutability": "mutable",
														"name": "accountEpochPoolData",
														"nameLocation": "1250:20:0",
														"nodeType": "VariableDeclaration",
														"scope": 104,
														"src": "1138:132:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_struct$_DelegateData_$8_storage_$_$_$",
															"typeString": "mapping(uint256 => mapping(bytes32 => mapping(address => struct Test.DelegateData)))"
														},
														"typeName": {
															"id": 83,
															"keyName": "epoch",
															"keyNameLocation": "1154:5:0",
															"keyType": {
																"id": 76,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1146:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Mapping",
															"src": "1138:103:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_struct$_DelegateData_$8_storage_$_$_$",
																"typeString": "mapping(uint256 => mapping(bytes32 => mapping(address => struct Test.DelegateData)))"
															},
															"valueName": "",
															"valueNameLocation": "-1:-1:-1",
															"valueType": {
																"id": 82,
																"keyName": "poolId",
																"keyNameLocation": "1179:6:0",
																"keyType": {
																	"id": 77,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "1171:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "Mapping",
																"src": "1163:77:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_struct$_DelegateData_$8_storage_$_$",
																	"typeString": "mapping(bytes32 => mapping(address => struct Test.DelegateData))"
																},
																"valueName": "",
																"valueNameLocation": "-1:-1:-1",
																"valueType": {
																	"id": 81,
																	"keyName": "user",
																	"keyNameLocation": "1205:4:0",
																	"keyType": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1197:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "Mapping",
																	"src": "1189:50:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_DelegateData_$8_storage_$",
																		"typeString": "mapping(address => struct Test.DelegateData)"
																	},
																	"valueName": "userPoolData",
																	"valueNameLocation": "1226:12:0",
																	"valueType": {
																		"id": 80,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 79,
																			"name": "DelegateData",
																			"nameLocations": [
																				"1213:12:0"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 8,
																			"src": "1213:12:0"
																		},
																		"referencedDeclaration": 8,
																		"src": "1213:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_DelegateData_$8_storage_ptr",
																			"typeString": "struct Test.DelegateData"
																		}
																	}
																}
															}
														},
														"visibility": "internal"
													}
												],
												"id": 91,
												"initialValue": {
													"condition": {
														"id": 85,
														"name": "isDelegate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 71,
														"src": "1281:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"components": [
															{
																"id": 88,
																"name": "usersEpochPoolData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 37,
																"src": "1321:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_struct$_DelegateData_$8_storage_$_$_$",
																	"typeString": "mapping(uint256 => mapping(bytes32 => mapping(address => struct Test.DelegateData storage ref)))"
																}
															}
														],
														"id": 89,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1320:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_struct$_DelegateData_$8_storage_$_$_$",
															"typeString": "mapping(uint256 => mapping(bytes32 => mapping(address => struct Test.DelegateData storage ref)))"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1281:59:0",
													"trueExpression": {
														"components": [
															{
																"id": 86,
																"name": "delegateEpochPoolData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 28,
																"src": "1295:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_struct$_DelegateData_$8_storage_$_$_$",
																	"typeString": "mapping(uint256 => mapping(bytes32 => mapping(address => struct Test.DelegateData storage ref)))"
																}
															}
														],
														"id": 87,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1294:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_struct$_DelegateData_$8_storage_$_$_$",
															"typeString": "mapping(uint256 => mapping(bytes32 => mapping(address => struct Test.DelegateData storage ref)))"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_struct$_DelegateData_$8_storage_$_$_$",
														"typeString": "mapping(uint256 => mapping(bytes32 => mapping(address => struct Test.DelegateData storage ref)))"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1138:202:0"
											},
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 92,
																	"name": "accountEpochPoolData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 84,
																	"src": "1360:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_struct$_DelegateData_$8_storage_$_$_$",
																		"typeString": "mapping(uint256 => mapping(bytes32 => mapping(address => struct Test.DelegateData storage ref)))"
																	}
																},
																"id": 94,
																"indexExpression": {
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1381:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1360:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_struct$_DelegateData_$8_storage_$_$",
																	"typeString": "mapping(bytes32 => mapping(address => struct Test.DelegateData storage ref))"
																}
															},
															"id": 96,
															"indexExpression": {
																"hexValue": "30",
																"id": 95,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1384:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1360:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_DelegateData_$8_storage_$",
																"typeString": "mapping(address => struct Test.DelegateData storage ref)"
															}
														},
														"id": 101,
														"indexExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 99,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1395:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 98,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1387:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 97,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1387:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 100,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1387:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1360:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_DelegateData_$8_storage",
															"typeString": "struct Test.DelegateData storage ref"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1399:12:0",
													"memberName": "totalClaimed",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 7,
													"src": "1360:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"functionReturnParameters": 75,
												"id": 103,
												"nodeType": "Return",
												"src": "1353:58:0"
											}
										]
									},
									"functionSelector": "36091dff",
									"id": 105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "test",
									"nameLocation": "1066:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "isDelegate",
												"nameLocation": "1076:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "1071:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 70,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1071:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1070:17:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "1108:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 73,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1108:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1107:9:0"
									},
									"scope": 106,
									"src": "1057:362:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 107,
							"src": "76:1348:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "39:1385:0"
				},
				"id": 0
			}
		}
	}
}